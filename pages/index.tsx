import type { NextPage } from "next";
import Head from "next/head";
import { useRef } from "react";

import fs from "fs";
import matter from "gray-matter";

import Banner from "../src/components/Banner";
import BottomNav from "../src/components/BottomNav";
import BottomNavAction from "../src/components/BottomNavAction";
import { CirclePersonIcon, ResumeIcon, WorkerIcon } from "../src/icons";
import Section from "../src/layout/Section";
import { MarkdownSection } from "../src/components/MarkdownSection";
import useSectionNameInTop from "../src/hooks/useSectionNameInTop";
import WindowScrollProgres from "../src/components/WindowScrollProgres";

export async function getStaticProps() {
  let aboutMeSection;

  try {
    const readFile = fs.readFileSync(`content/aboutme.md`, "utf-8");
    const { data, content } = matter(readFile);
    aboutMeSection = {
      data,
      content,
    };
  } catch (e) {
    console.error(e);
  }

  return {
    props: {
      aboutMeSection,
    },
  };
}

interface HomePageProps {
  aboutMeSection?: {
    data: {
      title: string;
    };
    content: any;
  };
}

const Home: NextPage<HomePageProps> = ({ aboutMeSection }) => {
  const aboutMeRef = useRef<HTMLElement | null>(null);
  const myProjectsRef = useRef<HTMLElement | null>(null);
  const contactMeRef = useRef<HTMLElement | null>(null);
  const activeSection = useSectionNameInTop(
    [aboutMeRef, myProjectsRef, contactMeRef],
    "-100px"
  );

  const scrollIntoView = (htmlElem: HTMLElement | null, scroolYOffset = -50) => {
    if (!htmlElem) return;

    const y =
      htmlElem.getBoundingClientRect().top + window.pageYOffset + scroolYOffset;

    window.scrollTo({ top: y, behavior: "smooth" });
  };

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <WindowScrollProgres/>
      <Banner title="Hi I'm Ernest, a web developer" />
      <div className="m-7 overflow-hidden">
        {aboutMeSection && (
          <Section
            title={aboutMeSection.data.title}
            name="aboutme"
            ref={aboutMeRef}
          >
            <MarkdownSection content={aboutMeSection.content} />
          </Section>
        )}
        {aboutMeSection && (
          <Section title={"Projects"} name="projects" ref={myProjectsRef}>
            <MarkdownSection content={aboutMeSection.content} />
          </Section>
        )}
        {aboutMeSection && (
          <Section title={"Contact"} name="contact" ref={contactMeRef}>
            <MarkdownSection content={aboutMeSection.content} />
          </Section>
        )}
      </div>
      <BottomNav>
        <BottomNavAction
          icon={<CirclePersonIcon />}
          label="About Me"
          action={() => {
            scrollIntoView(aboutMeRef.current);
          }}
          isActive={activeSection === "aboutme"}
        />
        <BottomNavAction
          icon={<WorkerIcon />}
          label="Projects"
          action={() => {
            scrollIntoView(myProjectsRef.current);
          }}
          isActive={activeSection === "projects"}
        />
        <BottomNavAction
          icon={<ResumeIcon />}
          label="Contact"
          action={() => {
            scrollIntoView(contactMeRef.current);
          }}
          isActive={activeSection === "contact"}
        />
      </BottomNav>
    </div>
  );
};

export default Home;
